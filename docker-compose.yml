version: '3.8'

services:
  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:latest
    hostname: rabbitmq
    volumes:
      - /var/lib/rabbitmq
    env_file:
      - .env
    ports:
      - 5672:5672
      - 15672:15672
    restart: always

  microservice-app:
    container_name: microservice-app
    build:
      context: ./
      dockerfile: ./apps/microservice-app/Dockerfile
    ports:
      - '5000:5000'
    env_file:
      - .env
    depends_on:
      - rabbitmq
      - user
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    command: npm run start:dev microservice-app

  user:
    container_name: user-app
    build:
      context: ./
      dockerfile: ./apps/user/Dockerfile
    env_file:
      - .env
    depends_on:
      - rabbitmq
      - postgresUser
    volumes:
      - dataProf:/var/lib/postgresql/data
    command: npm run start:dev user

  profile:
    container_name: profile-app
    build:
      context: ./
      dockerfile: ./apps/profile/Dockerfile
    env_file:
      - .env
    depends_on:
      - rabbitmq
      - postgresProfile
    volumes:
      - dataProf:/var/lib/postgresql/data
    command: npm run start:dev profile

  postgresUser:
    container_name: postgresUser
    image: postgres:latest
    environment:
      POSTGRES_DB: 'user'
      POSTGRES_PASSWORD: '12345'
      PG_DATA: /var/lib/postgresql/data
    ports:
      - '5432:5432'
    volumes:
      - dataUser:/var/lib/postgresql/data
    restart: always

  postgresProfile:
    container_name: postgresProfile
    image: postgres:latest
    environment:
      POSTGRES_DB: 'profile'
      POSTGRES_PASSWORD: '12345'
      PG_DATA: /var/lib/postgresql/data
    ports:
      - '5432:5432'
    volumes:
      - dataUser:/var/lib/postgresql/data
    restart: always

volumes:
  dataUser:
  dataProf: